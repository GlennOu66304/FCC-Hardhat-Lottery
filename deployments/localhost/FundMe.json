{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_onlyOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x455eb4fe17f29dbc64cb14f8a545d59ad7b7afbd33c8ef89e98bf85f23e4068a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "837555",
    "logsBloom": "0x
    "blockHash": "0x43680f4ac2d96b79e0129e0b2bed4c39a03ee68859fef52d879ca9f2809894d6",
    "transactionHash": "0x455eb4fe17f29dbc64cb14f8a545d59ad7b7afbd33c8ef89e98bf85f23e4068a",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "837555",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "ff1e58acf611a5487916a4a437a20ec8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_onlyOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"NotOwner()\":[{\"notice\":\"Network: Goerli Aggregator: ETH/USD Address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n// Goal\\n// 1.deposit the toen into the contract\\n// 1.1 ge the conversation rate from the chain link feeds\\n// 1.2 by using this function get the token back\\n// 2.withdraw the token from the contract\\npragma solidity >=0.7.0 <0.9.0;\\nimport \\\"./PriceConverter.sol\\\";\\n\\n  /**\\n     * Network: Goerli\\n     * Aggregator: ETH/USD\\n     * Address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n     */\\n\\n     error NotOwner();\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    uint256  constant MINIMUM_USD = 50*1e18;\\n    address[] public funders;\\n    mapping(address=>uint256) public addressToAmountFunded;\\n    address public  immutable i_onlyOwner;\\n    AggregatorV3Interface public priceFeed;\\n// beofre immutable 23600\\n// immutable \\t21464 gas \\n    constructor(address priceFeedAddress){   \\n        i_onlyOwner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n        \\n    \\n\\n    function fund() public payable{\\n    // no constant 674892\\n    // constant 653869\\n        require(msg.value.getConversationRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender]=msg.value;\\n\\n    }\\n\\n// reset the fund amount to 0\\n  function withdraw() public  i_Owner{\\n     \\n//  no immutable 653869\\n// \\n      for(uint256 funderIndex=0; funderIndex < funders.length;funderIndex++){\\n         address funder = funders[funderIndex];\\n          addressToAmountFunded[funder]=  0;\\n      }\\n// reset the address array to empty element array\\n      funders = new address[](0);\\n\\n    //   send the ethrenum\\n    (bool callSuccess,) = payable(msg.sender).call{value:address(this).balance}(\\\"\\\");\\n    require(callSuccess,\\\"call Failed\\\");\\n  }\\n\\nmodifier  i_Owner(){\\n// require(msg.sender == i_onlyOwner,\\\"you need to be the project owner!\\\");\\nif(msg.sender!=i_onlyOwner) revert NotOwner();\\n_;\\n}\\n\\n// receive\\n\\nreceive() external payable{\\nfund();\\n}\\n  \\n// fallback\\nfallback() external payable{\\n  fund();\\n}\\n}\",\"keccak256\":\"0xe930cc2ad33749ead1d6008b4819d84bf4b44a664548f8dee2f54e196bea4587\",\"license\":\"GPL-3.0\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.7.0 <0.9.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter{\\n    // latest price is the rate with init\\n   function getLatestPrice(AggregatorV3Interface priceFeed) public view returns(uint256) {\\n    //   AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n         ( ,int256 price,,,) = priceFeed.latestRoundData();\\n         return uint256(price * 1e10);\\n   }\\n\\n//    rate with decimal \\n// price of the final function\\n// library should be the internal, set the public will cause Error\\n// FundMe hardhat deploy -> Error: invalid bytecode (argument=\\\"bytecode\\\", value=\\\"0\\n// https://github.com/smartcontractkit/full-blockchain-solidity-course-js/discussions/201\\nfunction getConversationRate(uint256 ethamount,AggregatorV3Interface priceFeed)  internal view returns(uint256){\\n    uint256 ethPrice = getLatestPrice(priceFeed);\\n    //  rate with decimal \\n    uint256 ethamountInUsd = (ethamount * ethPrice) / 1e18;\\n\\n    return  ethamountInUsd;\\n}\\n\\n}\",\"keccak256\":\"0x952cceb90e37b544e4fb7b23d0c3b02463c182890892b8eff1f9521d5297c69a\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f2a380380610f2a83398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610dc56101656000396000818161028e015261050c0152610dc56000f3fe6080604052600436106100595760003560e01c80633ccfd60b146100725780633e47d6f314610089578063741bef1a146100c6578063af37c6b5146100f1578063b60d42881461011c578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061008761028c565b005b34801561009557600080fd5b506100b060048036038101906100ab9190610753565b6104cc565b6040516100bd9190610799565b60405180910390f35b3480156100d257600080fd5b506100db6104e4565b6040516100e89190610813565b60405180910390f35b3480156100fd57600080fd5b5061010661050a565b604051610113919061083d565b60405180910390f35b610124610163565b005b34801561013257600080fd5b5061014d60048036038101906101489190610884565b61052e565b60405161015a919061083d565b60405180910390f35b6802b5e3af16b18800006101a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056d90919063ffffffff16565b10156101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da9061090e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610311576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103bc5760008082815481106103365761033561092e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103b49061098c565b915050610314565b50600067ffffffffffffffff8111156103d8576103d76109d5565b5b6040519080825280602002602001820160405280156104065781602001602082028036833780820191505090505b506000908051906020019061041c929190610649565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161044390610a35565b60006040518083038185875af1925050503d8060008114610480576040519150601f19603f3d011682016040523d82523d6000602084013e610485565b606091505b50509050806104c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c090610a96565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061053e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610579836105a9565b90506000670de0b6b3a764000082866105929190610ab6565b61059c9190610b3f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062a9190610bfd565b5050509150506402540be400816106419190610c78565b915050919050565b8280548282559060005260206000209081019282156106c2579160200282015b828111156106c15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610669565b5b5090506106cf91906106d3565b5090565b5b808211156106ec5760008160009055506001016106d4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610720826106f5565b9050919050565b61073081610715565b811461073b57600080fd5b50565b60008135905061074d81610727565b92915050565b600060208284031215610769576107686106f0565b5b60006107778482850161073e565b91505092915050565b6000819050919050565b61079381610780565b82525050565b60006020820190506107ae600083018461078a565b92915050565b6000819050919050565b60006107d96107d46107cf846106f5565b6107b4565b6106f5565b9050919050565b60006107eb826107be565b9050919050565b60006107fd826107e0565b9050919050565b61080d816107f2565b82525050565b60006020820190506108286000830184610804565b92915050565b61083781610715565b82525050565b6000602082019050610852600083018461082e565b92915050565b61086181610780565b811461086c57600080fd5b50565b60008135905061087e81610858565b92915050565b60006020828403121561089a576108996106f0565b5b60006108a88482850161086f565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006108f8601b836108b1565b9150610903826108c2565b602082019050919050565b60006020820190508181036000830152610927816108eb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061099782610780565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109ca576109c961095d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a1f600083610a04565b9150610a2a82610a0f565b600082019050919050565b6000610a4082610a12565b9150819050919050565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610a80600b836108b1565b9150610a8b82610a4a565b602082019050919050565b60006020820190508181036000830152610aaf81610a73565b9050919050565b6000610ac182610780565b9150610acc83610780565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b0557610b0461095d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b4a82610780565b9150610b5583610780565b925082610b6557610b64610b10565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b8f81610b70565b8114610b9a57600080fd5b50565b600081519050610bac81610b86565b92915050565b6000819050919050565b610bc581610bb2565b8114610bd057600080fd5b50565b600081519050610be281610bbc565b92915050565b600081519050610bf781610858565b92915050565b600080600080600060a08688031215610c1957610c186106f0565b5b6000610c2788828901610b9d565b9550506020610c3888828901610bd3565b9450506040610c4988828901610be8565b9350506060610c5a88828901610be8565b9250506080610c6b88828901610b9d565b9150509295509295909350565b6000610c8382610bb2565b9150610c8e83610bb2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ccd57610ccc61095d565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d0a57610d0961095d565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d4757610d4661095d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d8457610d8361095d565b5b82820290509291505056fea264697066735822122084eedd57a53511cadc67fa61d7dea101efdd4098396d40b93aa1f4d86d497c4e64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80633ccfd60b146100725780633e47d6f314610089578063741bef1a146100c6578063af37c6b5146100f1578063b60d42881461011c578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061008761028c565b005b34801561009557600080fd5b506100b060048036038101906100ab9190610753565b6104cc565b6040516100bd9190610799565b60405180910390f35b3480156100d257600080fd5b506100db6104e4565b6040516100e89190610813565b60405180910390f35b3480156100fd57600080fd5b5061010661050a565b604051610113919061083d565b60405180910390f35b610124610163565b005b34801561013257600080fd5b5061014d60048036038101906101489190610884565b61052e565b60405161015a919061083d565b60405180910390f35b6802b5e3af16b18800006101a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056d90919063ffffffff16565b10156101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da9061090e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610311576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103bc5760008082815481106103365761033561092e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103b49061098c565b915050610314565b50600067ffffffffffffffff8111156103d8576103d76109d5565b5b6040519080825280602002602001820160405280156104065781602001602082028036833780820191505090505b506000908051906020019061041c929190610649565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161044390610a35565b60006040518083038185875af1925050503d8060008114610480576040519150601f19603f3d011682016040523d82523d6000602084013e610485565b606091505b50509050806104c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c090610a96565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061053e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610579836105a9565b90506000670de0b6b3a764000082866105929190610ab6565b61059c9190610b3f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062a9190610bfd565b5050509150506402540be400816106419190610c78565b915050919050565b8280548282559060005260206000209081019282156106c2579160200282015b828111156106c15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610669565b5b5090506106cf91906106d3565b5090565b5b808211156106ec5760008160009055506001016106d4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610720826106f5565b9050919050565b61073081610715565b811461073b57600080fd5b50565b60008135905061074d81610727565b92915050565b600060208284031215610769576107686106f0565b5b60006107778482850161073e565b91505092915050565b6000819050919050565b61079381610780565b82525050565b60006020820190506107ae600083018461078a565b92915050565b6000819050919050565b60006107d96107d46107cf846106f5565b6107b4565b6106f5565b9050919050565b60006107eb826107be565b9050919050565b60006107fd826107e0565b9050919050565b61080d816107f2565b82525050565b60006020820190506108286000830184610804565b92915050565b61083781610715565b82525050565b6000602082019050610852600083018461082e565b92915050565b61086181610780565b811461086c57600080fd5b50565b60008135905061087e81610858565b92915050565b60006020828403121561089a576108996106f0565b5b60006108a88482850161086f565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006108f8601b836108b1565b9150610903826108c2565b602082019050919050565b60006020820190508181036000830152610927816108eb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061099782610780565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109ca576109c961095d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a1f600083610a04565b9150610a2a82610a0f565b600082019050919050565b6000610a4082610a12565b9150819050919050565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610a80600b836108b1565b9150610a8b82610a4a565b602082019050919050565b60006020820190508181036000830152610aaf81610a73565b9050919050565b6000610ac182610780565b9150610acc83610780565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b0557610b0461095d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b4a82610780565b9150610b5583610780565b925082610b6557610b64610b10565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b8f81610b70565b8114610b9a57600080fd5b50565b600081519050610bac81610b86565b92915050565b6000819050919050565b610bc581610bb2565b8114610bd057600080fd5b50565b600081519050610be281610bbc565b92915050565b600081519050610bf781610858565b92915050565b600080600080600060a08688031215610c1957610c186106f0565b5b6000610c2788828901610b9d565b9550506020610c3888828901610bd3565b9450506040610c4988828901610be8565b9350506060610c5a88828901610be8565b9250506080610c6b88828901610b9d565b9150509295509295909350565b6000610c8382610bb2565b9150610c8e83610bb2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ccd57610ccc61095d565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d0a57610d0961095d565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d4757610d4661095d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d8457610d8361095d565b5b82820290509291505056fea264697066735822122084eedd57a53511cadc67fa61d7dea101efdd4098396d40b93aa1f4d86d497c4e64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "errors": {
      "NotOwner()": [
        {
          "notice": "Network: Goerli Aggregator: ETH/USD Address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
        }
      ]
    },
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}